name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*' # Triggers on tags like v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.5' # Specify your Go version
          check-latest: true

      # Step 3: Extract version from tag
      - name: Extract version
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # Step 4: Define architectures to build
      - name: Define architectures
        id: architectures
        run: |
          echo "ARCHS=linux/amd64,linux/arm64,linux/mips64,linux/mips64le,windows/amd64,darwin/amd64,darwin/arm64" >> $GITHUB_ENV

      # Step 5: Split architectures into an array
      - name: Split architectures
        id: split_archs
        run: |
          IFS=',' read -ra ADDR <<< "$ARCHS"
          for i in "${ADDR[@]}"; do
              echo "archs+=(\"$i\")" >> $GITHUB_ENV
          done
        shell: bash

      # Step 6: Build binaries
      - name: Build binaries
        run: |
          IFS=',' read -ra TARGETS <<< "$ARCHS"
          for target in "${TARGETS[@]}"; do
              GOOS=$(echo $target | cut -d'/' -f1)
              GOARCH=$(echo $target | cut -d'/' -f2)
              echo "Building for $GOOS/$GOARCH"
              ./build.sh $GOOS $GOARCH $VERSION
          done

      # Step 7: Upload artifacts for release
      - name: Upload Release Assets
        uses: actions/upload-artifact@v3
        with:
          name: ssdp-forwarder-binaries
          path: build/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Download built binaries
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: ssdp-forwarder-binaries
          path: ./ssdp-forwarder-binaries

      # Step 3: List downloaded artifacts for verification (optional)
      - name: List downloaded artifacts
        run: |
          echo "Contents of ./ssdp-forwarder-binaries:"
          ls -la ./ssdp-forwarder-binaries

      # Step 5: Authenticate GitHub CLI
      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      # Step 6: Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        run: |
          gh release create ${{ github.ref_name }} --title "Release ${{ github.ref_name }}" --notes "First release of SSDP Forwarder"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: Upload binaries to GitHub Release
      - name: Upload binaries to GitHub Release
        run: |
          for binary in ./ssdp-forwarder-binaries/*/*; do
            if [ -f "$binary" ]; then
              echo "Uploading $binary"
              gh release upload ${{ github.ref_name }} "$binary" --clobber
            else
              echo "Skipping $binary as it is not a file."
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
